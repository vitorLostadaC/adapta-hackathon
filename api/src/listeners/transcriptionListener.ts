import { Server as SocketIOServer } from 'socket.io'
import { mockedRag } from '../data/data'
import { groq } from '../lib/groq'
import { supabase } from '../lib/supabase'

export function initTranscriptionListener(io: SocketIOServer): void {
  supabase.realtime
    .channel('transcriptions')
    .on(
      'postgres_changes',
      { event: 'INSERT', schema: 'public', table: 'transcriptions' },
      async (payload) => {
        const lastMessage = payload.new as {
          type: 'user' | 'customer'
          session_id: string
        }

        if (lastMessage.type !== 'customer') return

        const lastsMessages = await supabase
          .from('transcriptions')
          .select('*')
          .eq('session_id', lastMessage.session_id)
          .order('created_at', { ascending: true })
          .limit(30)

        const messages = lastsMessages.data?.map((message) => ({
          role: 'user',
          name: message.type,
          content: message.transcript
        }))

        const chatCompletion = await groq.chat.completions.create({
          messages: [
            {
              role: 'system',
              content: `<instructions>
    <identity>
        - Voc√™ √© um assistente de atendimento ao cliente especializado em fornecer insights valiosos para vendedores durante chamadas.
    </identity>
    <purpose>
        - Seu principal objetivo √© auxiliar os vendedores oferecendo insights e informa√ß√µes relevantes que possam melhorar seu desempenho durante as chamadas de vendas.
    </purpose>
    <context>
        - Voc√™ opera em um ambiente de atendimento ao cliente onde as chamadas de vendas s√£o uma parte crucial do processo de neg√≥cios.
        - Os vendedores contam com voc√™ para fornecer insights e dados em tempo real para ajud√°-los a fechar neg√≥cios e melhorar a satisfa√ß√£o do cliente.
    </context>
    <task>
        - Analisar o contexto da chamada de vendas e extrair informa√ß√µes-chave que possam ser usadas para fornecer insights acion√°veis.
        - Entregar insights concisos e relevantes que possam ser imediatamente aplicados pelo vendedor durante a chamada.
        - Garantir que os insights sejam adaptados √†s necessidades e objetivos espec√≠ficos da chamada de vendas.
    </task>
    <constraints>
        - N√£o forne√ßa qualquer introdu√ß√£o, pre√¢mbulo ou coment√°rio; apenas entregue os insights.
        - Caso nao tenha nada relevante para responder, e ja tenha respondido sobre assunto anterior, n√£o responda nada.
        - Respostas curtas e diretas.
        - Assegure-se de que os insights sejam claros, concisos e diretamente aplic√°veis ao contexto de vendas.
        - Evite usar jarg√µes t√©cnicos, a menos que sejam necess√°rios e compreendidos pelo vendedor.
    </constraints>
    <examples>
        <example>
            <input>
                - O vendedor est√° em uma chamada com um cliente potencial interessado no produto X.
            </input>
            <output>
                - Destaque as caracter√≠sticas √∫nicas do produto X que o diferenciam dos concorrentes.
                - Mencione quaisquer promo√ß√µes ou descontos atuais dispon√≠veis para o produto X.
                - Forne√ßa dados sobre as classifica√ß√µes recentes de satisfa√ß√£o do cliente para o produto X.
                - N√£o forne√ßa qualquer informa√ß√£o da qual n√£o tenha certeza.
            </output>
        </example>
    </examples>
</instructions>`
            },
            {
              role: 'tool',
              tool_call_id: '123',
              content: mockedRag
            },
            // shii ü§´
            ...((messages as any) || [])
          ],
          max_completion_tokens: 50,
          model: 'llama3-8b-8192'
        })

        const response = chatCompletion.choices[0]?.message.content

        if (!response) return

        // Broadcast the response to all connected clients (demo purpose)
        io.sockets.sockets.forEach((socket) => {
          socket.emit('message', response)
        })
      }
    )
    .subscribe()
}
